vll t(4*N);
vll a(N);
void build(ll u,ll l,ll r)
{
        if(l == r)
                t[u] = a[l];    
        else
        {
                ll m = l + (r-l)/2;
                build(2*u,l,m);
                build(2*u+1,m+1,r);
                t[u] = t[2*u] + t[2*u + 1]; 
        }
}
ll sum(ll u,ll l,ll r,ll ql,ll qr)
{
        if(ql > qr)
                return 0;
        if(l == ql and r == qr)
                return t[u];
        ll m = l + (r-l)/2;
        return sum(2*u,l,m,ql,min(qr,m)) + sum(2*u+1,m+1,r,max(ql,m+1),qr);
}
 
void update(ll u,ll l,ll r,ll pos,ll val)
{
        if(l == r)
                t[u] = val;
        else
        {
                ll m = l + (r-l)/2;
                if(pos <= m)
                        update(2*u,l,m,pos,val);
                else
                        update(2*u+1,m+1,r,pos,val);
                t[u] = t[2*u] + t[2*u+1];
        }
}